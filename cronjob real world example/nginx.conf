To log HTTP request logs in an NGINX pod, you need to add server configuration for listening to HTTP requests in the NGINX pod container "nginx.conf" file. Here is a step-by-step guide:

Exec into the NGINX pod: Use the `kubectl exec` command to access the NGINX pod and update the "/etc/nginx/nginx.conf" file.
```
kubectl exec pod1 -it -- sh
`#`
# Navigate to the location of the Nginx configuration in the Pod usually located in "/etc/nginx/nginx.conf" file to include the following server configuration.:
vim /etc/nginx/nginx.conf
```
This will open the nginx.conf file in the pod for updating.

Update the access_log directive: Update the access_log directive in the nginx.conf file to log HTTP requests.
```
http {

    ...
    # This is the default path for logging in Nginx. So ensure the access_log directive is set to log HTTP requests.
    access_log /var/log/nginx/access.log  main; 
 
    # Add the access_log directive to log HTTP requests
      server {
        listen 80;
        server_name localhost;

        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
        }
    }
    
    ...

}
```
Save the changes: Save the changes to the "nginx.conf" file and exit the editor.

```
  server {
        liste
        
        n 80;
        server_name localhost;

        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
        }
    }
```


Check the logs: Once the pod is restart, you can check the HTTP request logs using the following command:

This setup ensures that HTTP request logs are captured and can be accessed for monitoring and debugging purposes.

Similar code found with 2 license types - View matches

This setup ensures that HTTP request logs are captured and can be accessed for monitoring and debugging purposes.

## Start a job from a CronJob
```
kubectl create job --from=cronjob/log-cleanup job-log-cleanup-manual
```

## Test with a tmp pod
```
k run tmp --image nginx --restart Never --rm -i -- curl 10.244.2.24
````